import React from 'react';
import ReactDOM from 'react-dom';

interface AppProps {
  color?: string;
}
****************** Functional component****************************
const App = (props: AppProps): JSX.Element => {
  //means return value is gonna be JSX element
  return <div>{props.color}</div>;
};



***************** Class Component *********************************
//every tyme we need to add props to the component we need to create interface with all props
//we want to pass down
class App extends React.Component<AppProps> {
  state = {
    counter: 0,
  };

  onIncrement = (): void => {
    this.setState({ counter: this.state.counter + 1 });
  };

  onDecrement = (): void => {
    this.setState({ counter: this.state.counter - 1 });
  };

  render() {
    return (
      <div>
        <button onClick={this.onIncrement}>Increment</button>
        <h1>{this.state.counter}</h1>
        <button onClick={this.onDecrement}>Decrement</button>
      </div>
    );
  }
}

ReactDOM.render(<App color="red" />, document.querySelector('#root'));
